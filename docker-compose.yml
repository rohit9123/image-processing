version: '3.9'

services:
  web:
    build: .
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=8080
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_BUCKET_NAME=${GCP_BUCKET_NAME}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcp-key.json
    volumes:
      - ./config:/app/config  # Ensures `/app/config/gcp-key.json` is accessible
    networks:
      - app-network

  worker:
    build: .
    restart: always
    command: node --experimental-specifier-resolution=node workers/imageProcessor.js
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_BUCKET_NAME=${GCP_BUCKET_NAME}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcp-key.json
    volumes:
      - ./config:/app/config  # Ensure the worker also gets `gcp-key.json`
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
